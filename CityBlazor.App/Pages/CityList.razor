@page "/CityList"
@inject HttpClient Http
@using CityBlazor.Shared.Models
@using CityBlazorApp.Services

<h1>Cities</h1>
@if (cities == null)
{
    <p><em>Loading...</em></p>
}
else if (!cities.Any())
{
    <p><em>No Cities exist.  Please add some.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Is capital?</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var city in cities)
            {
                <tr>
                    <td>@city.Name</td>
                    <td>@city.Description</td>
                    <td>@city.IsCapital</td>
                    <td>
                        <a href="@($"CityEdit/{city.CityId}")" class="btn btn-primary table-btn">
                            <i class="fas fa-info-circle">Edit</i>
                        </a>
                        <a href="@($"CityEdit/{city.CityId}")" class="btn btn-primary table-btn">
                            <i class="fas fa-edit"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="QuickAddCity" class="btn btn-dark table-btn quick-add-btn">&nbsp;&nbsp;+&nbsp;&nbsp;</button>
<AddCityDialog @ref="AddCityDialog" CloseEventCallback="@AddCityDialog_OnDialogClose"></AddCityDialog>

@code{
    private IEnumerable<City> cities { get; set; }

    [Inject]
    public ICityDataService CityDataService { get; set; }

    protected AddCityDialog AddCityDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        @* forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json"); *@
        cities = await Http.GetFromJsonAsync<List<City>>("sample-data/cities.json");
    }

    protected void QuickAddCity()
    {
        AddCityDialog.Show();
    }

    public async void AddCityDialog_OnDialogClose()
    {
        cities = (await CityDataService.Get()).ToList();
        StateHasChanged();
    }
}